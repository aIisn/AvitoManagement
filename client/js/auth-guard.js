// filename="auth-guard.js"
// –ú–æ–¥—É–ª—å –¥–ª—è –∑–∞—â–∏—Ç—ã –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π —á–∞—Å—Ç–∏ –æ—Ç –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
// Module for protecting client-side from unauthorized access

// ============================================================================
// –ì–õ–û–ë–ê–õ–¨–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï / GLOBAL VARIABLES
// ============================================================================

let currentUser = null;
let sessionToken = null;
let authCheckInterval = null;

// ============================================================================
// –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø / INITIALIZATION
// ============================================================================

document.addEventListener('DOMContentLoaded', function() {
    console.log('üõ°Ô∏è –ú–æ–¥—É–ª—å –∑–∞—â–∏—Ç—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã / Check authorization on page load
    checkAuthentication();
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ / Start periodic auth check
    startAuthCheck();
    
    console.log('‚úÖ –ó–∞—â–∏—Ç–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∞–∫—Ç–∏–≤–Ω–∞');
});

// ============================================================================
// –ü–†–û–í–ï–†–ö–ê –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò / AUTHENTICATION CHECK
// ============================================================================

async function checkAuthentication() {
    try {
        // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ localStorage –∏–ª–∏ cookies / Get token from localStorage or cookies
        sessionToken = localStorage.getItem('session_token') || getCookie('session_token');
        
        if (!sessionToken) {
            console.log('üîí –¢–æ–∫–µ–Ω —Å–µ—Å—Å–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é');
            redirectToAuth();
            return false;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ / Check token validity on server
        const response = await fetch('/api/auth/me', {
            method: 'GET',
            headers: {
                'Authorization': `Bearer ${sessionToken}`,
                'Content-Type': 'application/json'
            }
        });
        
        if (!response.ok) {
            if (response.status === 401) {
                console.log('üîí –°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é');
                clearAuthData();
                redirectToAuth();
                return false;
            }
            throw new Error(`HTTP ${response.status}`);
        }
        
        const data = await response.json();
        
        if (data.success && data.user) {
            currentUser = data.user;
            console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:', currentUser.username);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º UI —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è / Update UI with user data
            updateUserInterface();
            
            return true;
        } else {
            throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞');
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
        clearAuthData();
        redirectToAuth();
        return false;
    }
}

function startAuthCheck() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç / Check auth every 5 minutes
    authCheckInterval = setInterval(async () => {
        const isAuthenticated = await checkAuthentication();
        if (!isAuthenticated) {
            clearInterval(authCheckInterval);
        }
    }, 5 * 60 * 1000);
}

// ============================================================================
// –£–ü–†–ê–í–õ–ï–ù–ò–ï –ê–í–¢–û–†–ò–ó–ê–¶–ò–ï–ô / AUTHENTICATION MANAGEMENT
// ============================================================================

function clearAuthData() {
    currentUser = null;
    sessionToken = null;
    localStorage.removeItem('session_token');
    localStorage.removeItem('user');
    // –£–¥–∞–ª—è–µ–º cookie / Remove cookie
    document.cookie = 'session_token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';
}

function redirectToAuth() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã —É–∂–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ / Check if we're not already on auth page
    if (!window.location.pathname.includes('auth.html')) {
        window.location.href = '/auth.html';
    }
}

function updateUserInterface() {
    if (!currentUser) return;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è / Update user avatar
    const userAvatar = document.querySelector('.user-avatar');
    if (userAvatar) {
        userAvatar.innerHTML = `<i class="fas fa-user"></i>`;
        userAvatar.title = `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${currentUser.username}`;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ / Add user info to settings
    const settingsTab = document.querySelector('[data-tab="settings"]');
    if (settingsTab) {
        const settingsContent = document.getElementById('settings');
        if (settingsContent) {
            settingsContent.innerHTML = `
                <div class="section">
                    <h2>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</h2>
                    <div class="user-info">
                        <h3>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ</h3>
                        <p><strong>–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</strong> ${currentUser.username}</p>
                        <p><strong>Email:</strong> ${currentUser.email}</p>
                        <p><strong>ID:</strong> ${currentUser.id}</p>
                        <p><strong>–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:</strong> ${formatDate(currentUser.last_activity)}</p>
                    </div>
                    <div class="auth-actions">
                        <button class="btn-danger" onclick="logout()">
                            <i class="fas fa-sign-out-alt"></i>
                            –í—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
                        </button>
                    </div>
                </div>
            `;
        }
    }
}

// ============================================================================
// API –§–£–ù–ö–¶–ò–ò / API FUNCTIONS
// ============================================================================

async function logout() {
    try {
        if (!sessionToken) {
            clearAuthData();
            redirectToAuth();
            return;
        }
        
        const response = await fetch('/api/auth/logout', {
            method: 'POST',
            headers: {
                'Authorization': `Bearer ${sessionToken}`,
                'Content-Type': 'application/json'
            }
        });
        
        if (response.ok) {
            const data = await response.json();
            if (data.success) {
                console.log('‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã');
            }
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞:', error);
    } finally {
        // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ / Clear data and redirect regardless of result
        clearAuthData();
        redirectToAuth();
    }
}

// ============================================================================
// –£–¢–ò–õ–ò–¢–´ / UTILITIES
// ============================================================================

function getCookie(name) {
    const value = `; ${document.cookie}`;
    const parts = value.split(`; ${name}=`);
    if (parts.length === 2) return parts.pop().split(';').shift();
    return null;
}

function formatDate(dateString) {
    try {
        const date = new Date(dateString);
        return date.toLocaleString('ru-RU');
    } catch (error) {
        return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    }
}

// ============================================================================
// –û–ë–†–ê–ë–û–¢–ö–ê –û–®–ò–ë–û–ö API / API ERROR HANDLING
// ============================================================================

// –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ fetch –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ / Intercept all fetch requests to add authorization
const originalFetch = window.fetch;
window.fetch = function(url, options = {}) {
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∫ API –∑–∞–ø—Ä–æ—Å–∞–º / Add auth token to API requests
    if (url.startsWith('/api/') && !url.includes('/api/auth/')) {
        if (sessionToken) {
            options.headers = options.headers || {};
            options.headers['Authorization'] = `Bearer ${sessionToken}`;
        }
    }
    
    return originalFetch(url, options).then(response => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç—ã –Ω–∞ –æ—à–∏–±–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ / Check responses for auth errors
        if (response.status === 401 && url.startsWith('/api/')) {
            console.log('üîí –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –æ—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ');
            clearAuthData();
            redirectToAuth();
        }
        return response;
    });
};

// ============================================================================
// –≠–ö–°–ü–û–†–¢ –§–£–ù–ö–¶–ò–ô –î–õ–Ø –ì–õ–û–ë–ê–õ–¨–ù–û–ì–û –î–û–°–¢–£–ü–ê / EXPORT FUNCTIONS FOR GLOBAL ACCESS
// ============================================================================

// –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ / Make functions globally available
window.AuthGuard = {
    checkAuthentication,
    logout,
    getCurrentUser: () => currentUser,
    getSessionToken: () => sessionToken,
    clearAuthData
};

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤—ã—Ö–æ–¥–∞ / Global logout function
window.logout = logout;
