# server/modules/utils.py (–æ–±–Ω–æ–≤–ª–µ–Ω: —É–¥–∞–ª–µ–Ω—ã –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ BLOCKED_IPS –∏ IP_REQUEST_COUNTS, —É–¥–∞–ª–µ–Ω–∞ –ª–æ–≥–∏–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ is_suspicious_request, —É–¥–∞–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è clean_blocked_ips)

import pytz
from datetime import datetime
import os

def get_timestamp():
    # –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â—É—é –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É –≤ –º–æ—Å–∫–æ–≤—Å–∫–æ–º –≤—Ä–µ–º–µ–Ω–∏
    tz = pytz.timezone('Europe/Moscow')
    return datetime.now(tz).strftime("%Y-%m-%d %H:%M:%S")

def log_message(message):
    # –õ–æ–≥–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–æ–π –≤ –∫–æ–Ω—Å–æ–ª—å –∏ —Ñ–∞–π–ª
    timestamp = get_timestamp()
    log_entry = f"{timestamp} - {message}"
    print(log_entry)
    log_dir = os.path.join(os.path.dirname(os.path.dirname(__file__)), 'logs')
    os.makedirs(log_dir, exist_ok=True)
    log_path = os.path.join(log_dir, 'main.txt')
    with open(log_path, "a", encoding="utf-8") as f:
        f.write(log_entry + "\n")

def is_suspicious_request():
    # –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
    from flask import request  # –ò–º–ø–æ—Ä—Ç –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
    client_ip = request.remote_addr
    user_agent = request.headers.get('User-Agent', '')
    method = request.method
    
    if request.path == '/api/logs':
        return False
    
    if not any(ua in user_agent for ua in ['Mozilla/5.0', 'Chrome/', 'Safari/', 'Firefox/', 'Edge/']):
        log_message(f"üö´ –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–π User-Agent –æ—Ç {client_ip}: {user_agent[:100]}")
        return True
    
    if method not in ['GET', 'POST', 'HEAD', 'OPTIONS']:
        log_message(f"üö´ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–µ—Ç–æ–¥ {method} –æ—Ç {client_ip}")
        return True
    
    return False

def allowed_file(filename):
    # –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ–ø—É—Å—Ç–∏–º–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
    return '.' in filename and filename.rsplit('.', 1)[1].lower() in ("jpg", "jpeg", "png")